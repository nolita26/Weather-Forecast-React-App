{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { MapContext } from './map';\nfunction useControl(onCreate, arg1, arg2, arg3) {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n  useEffect(() => {\n    const opts = arg3 || arg2 || arg1;\n    const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\n    const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\n    const {\n      map\n    } = context;\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, opts === null || opts === void 0 ? void 0 : opts.position);\n      if (onAdd) {\n        onAdd(context);\n      }\n    }\n    return () => {\n      if (onRemove) {\n        onRemove(context);\n      }\n      // Map might have been removed (parent effects are destroyed before child ones)\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n  return ctrl;\n}\nexport default useControl;","map":null,"metadata":{},"sourceType":"module"}