{"ast":null,"code":"var _jsxFileName = \"/Users/nolitarego/weather-map/src/components/CitySelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySelection = ({\n  onSearch\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const fetchWeatherData = async city => {\n    const API_KEY = process.env.REACT_APP_OPENWEATHER_API_KEY;\n    try {\n      const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${API_KEY}`);\n      onSearch({\n        city: weatherResponse.data.name,\n        weather: weatherResponse.data,\n        forecast: forecastResponse.data\n      });\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input) {\n      fetchWeatherData(input);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex items-center mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      className: \"border border-gray-300 p-2 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent w-full sm:w-auto\",\n      placeholder: \"Enter city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white p-2 rounded-r-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-300\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelection, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = CitySelection;\nexport default CitySelection;\nvar _c;\n$RefreshReg$(_c, \"CitySelection\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CitySelection","onSearch","_s","input","setInput","fetchWeatherData","city","API_KEY","process","env","REACT_APP_OPENWEATHER_API_KEY","weatherResponse","get","forecastResponse","data","name","weather","forecast","error","console","handleSubmit","e","preventDefault","onSubmit","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nolitarego/weather-map/src/components/CitySelection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst CitySelection = ({ onSearch }) => {\n  const [input, setInput] = useState('');\n\n  const fetchWeatherData = async (city) => {\n      const API_KEY = process.env.REACT_APP_OPENWEATHER_API_KEY;\n      try {\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n        const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${API_KEY}`);\n        onSearch({\n          city: weatherResponse.data.name,\n          weather: weatherResponse.data,\n          forecast: forecastResponse.data,\n        });\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (input) {\n      fetchWeatherData(input);\n      setInput('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex items-center mb-4\">\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"border border-gray-300 p-2 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent w-full sm:w-auto\"\n        placeholder=\"Enter city\"\n      />\n      <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded-r-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-300\">Search</button>\n    </form>\n  );\n};\n\nexport default CitySelection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACrC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;IACzD,IAAI;MACF,MAAMC,eAAe,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,qDAAoDN,IAAK,uBAAsBC,OAAQ,EAAC,CAAC;MAClI,MAAMM,gBAAgB,GAAG,MAAMhB,KAAK,CAACe,GAAG,CAAE,sDAAqDN,IAAK,uBAAsBC,OAAQ,EAAC,CAAC;MACpIN,QAAQ,CAAC;QACPK,IAAI,EAAEK,eAAe,CAACG,IAAI,CAACC,IAAI;QAC/BC,OAAO,EAAEL,eAAe,CAACG,IAAI;QAC7BG,QAAQ,EAAEJ,gBAAgB,CAACC;MAC7B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAInB,KAAK,EAAE;MACTE,gBAAgB,CAACF,KAAK,CAAC;MACvBC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEL,OAAA;IAAMwB,QAAQ,EAAEH,YAAa;IAACI,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAC9D1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGP,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC1CH,SAAS,EAAC,uIAAuI;MACjJM,WAAW,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFnC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,2JAA2J;MAAAC,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvM,CAAC;AAEX,CAAC;AAAChC,EAAA,CAtCIF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}